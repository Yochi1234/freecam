local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
repeat wait() until player and player.Character and player:FindFirstChild("PlayerGui")
local camera = workspace.CurrentCamera

-- Utility
local function clamp(val, min, max)
	return math.max(min, math.min(max, val))
end

-- Character Lock
local function disableCharacterMovement()
	local humanoid = player.Character and player.Character:FindFirstChildWhichIsA("Humanoid")
	if humanoid then
		humanoid.WalkSpeed = 0
		humanoid.JumpPower = 0
	end
end

local function enableCharacterMovement()
	local humanoid = player.Character and player.Character:FindFirstChildWhichIsA("Humanoid")
	if humanoid then
		humanoid.WalkSpeed = 16
		humanoid.JumpPower = 50
	end
end

-- UI
local gui = Instance.new("ScreenGui", player.PlayerGui)
gui.Name = "FreecamGui"
gui.ResetOnSpawn = false

local function createArrow(text, pos)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0, 60, 0, 60)
	btn.Position = pos
	btn.Text = text
	btn.TextScaled = true
	btn.AnchorPoint = Vector2.new(0.5, 0.5)
	btn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	btn.ZIndex = 10
	btn.Parent = gui
	btn.Visible = false
	return btn
end

local btnToggle = Instance.new("TextButton", gui)
btnToggle.Size = UDim2.new(0, 130, 0, 60)
btnToggle.Position = UDim2.new(0, 20, 1, -90)
btnToggle.Text = "Freecam"
btnToggle.TextScaled = true
btnToggle.AnchorPoint = Vector2.new(0, 1)
btnToggle.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
btnToggle.ZIndex = 10

local btnReturn = Instance.new("TextButton", gui)
btnReturn.Size = UDim2.new(0, 130, 0, 60)
btnReturn.Position = UDim2.new(0, 170, 1, -90)
btnReturn.Text = "Return"
btnReturn.TextScaled = true
btnReturn.AnchorPoint = Vector2.new(0, 1)
btnReturn.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
btnReturn.Visible = false
btnReturn.ZIndex = 10

-- Arrow Buttons
local arrowUp = createArrow("▲", UDim2.new(0, 80, 1, -230))
local arrowDown = createArrow("▼", UDim2.new(0, 80, 1, -100))
local arrowLeft = createArrow("◀", UDim2.new(0, 20, 1, -165))
local arrowRight = createArrow("▶", UDim2.new(0, 140, 1, -165))
local btnUp = createArrow("⬆", UDim2.new(1, -90, 1, -230))
local btnDown = createArrow("⬇", UDim2.new(1, -160, 1, -230))

-- Freecam Vars
local isFreecam = false
local camRotation = Vector2.new(0, 0)
local speed = 2
local sensitivity = 0.005
local moveDir = Vector3.new()
local vertical = 0

-- Input Tracking
local held = {
	forward = false,
	backward = false,
	left = false,
	right = false,
	up = false,
	down = false,
}

arrowUp.MouseButton1Down:Connect(function() held.forward = true end)
arrowUp.MouseButton1Up:Connect(function() held.forward = false end)

arrowDown.MouseButton1Down:Connect(function() held.backward = true end)
arrowDown.MouseButton1Up:Connect(function() held.backward = false end)

arrowLeft.MouseButton1Down:Connect(function() held.left = true end)
arrowLeft.MouseButton1Up:Connect(function() held.left = false end)

arrowRight.MouseButton1Down:Connect(function() held.right = true end)
arrowRight.MouseButton1Up:Connect(function() held.right = false end)

btnUp.MouseButton1Down:Connect(function() held.up = true end)
btnUp.MouseButton1Up:Connect(function() held.up = false end)

btnDown.MouseButton1Down:Connect(function() held.down = true end)
btnDown.MouseButton1Up:Connect(function() held.down = false end)

-- Touch Drag Rotate
local dragging = false
local lastPos = nil

UserInputService.TouchStarted:Connect(function(input)
	if not isFreecam then return end
	if input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		lastPos = input.Position
	end
end)

UserInputService.TouchMoved:Connect(function(input)
	if dragging and isFreecam then
		local delta = input.Position - lastPos
		lastPos = input.Position
		camRotation = camRotation + Vector2.new(-delta.X, -delta.Y) * sensitivity
		camRotation = Vector2.new(camRotation.X, clamp(camRotation.Y, -math.pi / 2 + 0.1, math.pi / 2 - 0.1))
	end
end)

UserInputService.TouchEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch then
		dragging = false
	end
end)

-- Toggle Freecam
btnToggle.MouseButton1Click:Connect(function()
	if not isFreecam then
		local head = player.Character and player.Character:FindFirstChild("Head")
		if head then
			camera.CameraType = Enum.CameraType.Scriptable
			camera.CFrame = head.CFrame + Vector3.new(0, 5, 0)
			disableCharacterMovement()
			isFreecam = true
			btnToggle.Visible = false
			btnReturn.Visible = true
			arrowUp.Visible = true
			arrowDown.Visible = true
			arrowLeft.Visible = true
			arrowRight.Visible = true
			btnUp.Visible = true
			btnDown.Visible = true
		end
	end
end)

-- Exit Freecam
btnReturn.MouseButton1Click:Connect(function()
	if isFreecam then
		camera.CameraType = Enum.CameraType.Custom
		enableCharacterMovement()
		isFreecam = false
		btnToggle.Visible = true
		btnReturn.Visible = false
		arrowUp.Visible = false
		arrowDown.Visible = false
		arrowLeft.Visible = false
		arrowRight.Visible = false
		btnUp.Visible = false
		btnDown.Visible = false
	end
end)

-- RenderStep
RunService.RenderStepped:Connect(function()
	if isFreecam then
		local rotCFrame = CFrame.Angles(0, camRotation.X, 0) * CFrame.Angles(camRotation.Y, 0, 0)
		local forward = rotCFrame.LookVector
		local right = rotCFrame.RightVector

		local h = Vector3.new()
		if held.forward then h = h + forward end
		if held.backward then h = h - forward end
		if held.left then h = h - right end
		if held.right then h = h + right end
		if h.Magnitude > 0 then h = h.Unit end

		local v = 0
		if held.up then v = 1 elseif held.down then v = -1 end

		local offset = h * speed + Vector3.new(0, v * speed, 0)
		camera.CFrame = camera.CFrame + offset
		camera.CFrame = CFrame.new(camera.CFrame.Position) * rotCFrame
	end
end)
